folder layout 
- src/ holds pure functions
- scripts/ holds "runnable" code which makes functions work togethers
- tests/ verifies behaviours 
- data/ and outputs/ are runttime artifacts

virtualenv and dependencies 
- what: one venv for repo, per lab requirements.txt
- why: reproducibiltiy, CI must install exactly what I use

functions in src/line_pipeline.py
1. generate_data(cfg) -> creates synthetic data and saves CSV (+ meta JSON)
2. fit_line(csv_path) -> reads CSV, validates fit, fits a line_pipeline
3. save_plot() -> plots scatter + true line + fitted line (saves PNG)

GenConfig dataclass keeps parameters + file paths in one place

step 4 - design what & why
- error bars: "per point uncertainity" sigma_y[i]
   > use Weighted Least Squares with weights w_i = 1/sigma_y[i]^2 (Gaussian MLE)
- outliers: OLS can be moved by random points. defences:
   > Huber loss: softens penalty for big residuals
   > RANSAC: repeatedly fit on random subsets, keep consensus models
- missing/NaN: drop non finite rows 
   > tests must confirm no crash and raise or clean deterministically